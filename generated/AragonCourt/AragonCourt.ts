// THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY.

import {
  ethereum,
  JSONValue,
  TypedMap,
  Entity,
  Bytes,
  Address,
  BigInt
} from "@graphprotocol/graph-ts";

export class Heartbeat extends ethereum.Event {
  get params(): Heartbeat__Params {
    return new Heartbeat__Params(this);
  }
}

export class Heartbeat__Params {
  _event: Heartbeat;

  constructor(event: Heartbeat) {
    this._event = event;
  }

  get previousTermId(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get currentTermId(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }
}

export class StartTimeDelayed extends ethereum.Event {
  get params(): StartTimeDelayed__Params {
    return new StartTimeDelayed__Params(this);
  }
}

export class StartTimeDelayed__Params {
  _event: StartTimeDelayed;

  constructor(event: StartTimeDelayed) {
    this._event = event;
  }

  get previousStartTime(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get currentStartTime(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }
}

export class DisputeStateChanged extends ethereum.Event {
  get params(): DisputeStateChanged__Params {
    return new DisputeStateChanged__Params(this);
  }
}

export class DisputeStateChanged__Params {
  _event: DisputeStateChanged;

  constructor(event: DisputeStateChanged) {
    this._event = event;
  }

  get disputeId(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get state(): i32 {
    return this._event.parameters[1].value.toI32();
  }
}

export class EvidenceSubmitted extends ethereum.Event {
  get params(): EvidenceSubmitted__Params {
    return new EvidenceSubmitted__Params(this);
  }
}

export class EvidenceSubmitted__Params {
  _event: EvidenceSubmitted;

  constructor(event: EvidenceSubmitted) {
    this._event = event;
  }

  get disputeId(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get submitter(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get evidence(): Bytes {
    return this._event.parameters[2].value.toBytes();
  }
}

export class EvidencePeriodClosed extends ethereum.Event {
  get params(): EvidencePeriodClosed__Params {
    return new EvidencePeriodClosed__Params(this);
  }
}

export class EvidencePeriodClosed__Params {
  _event: EvidencePeriodClosed;

  constructor(event: EvidencePeriodClosed) {
    this._event = event;
  }

  get disputeId(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get termId(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }
}

export class NewDispute extends ethereum.Event {
  get params(): NewDispute__Params {
    return new NewDispute__Params(this);
  }
}

export class NewDispute__Params {
  _event: NewDispute;

  constructor(event: NewDispute) {
    this._event = event;
  }

  get disputeId(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get subject(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get draftTermId(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }

  get jurorsNumber(): BigInt {
    return this._event.parameters[3].value.toBigInt();
  }

  get metadata(): Bytes {
    return this._event.parameters[4].value.toBytes();
  }
}

export class JurorDrafted extends ethereum.Event {
  get params(): JurorDrafted__Params {
    return new JurorDrafted__Params(this);
  }
}

export class JurorDrafted__Params {
  _event: JurorDrafted;

  constructor(event: JurorDrafted) {
    this._event = event;
  }

  get disputeId(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get roundId(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }

  get juror(): Address {
    return this._event.parameters[2].value.toAddress();
  }
}

export class RulingAppealed extends ethereum.Event {
  get params(): RulingAppealed__Params {
    return new RulingAppealed__Params(this);
  }
}

export class RulingAppealed__Params {
  _event: RulingAppealed;

  constructor(event: RulingAppealed) {
    this._event = event;
  }

  get disputeId(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get roundId(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }

  get ruling(): i32 {
    return this._event.parameters[2].value.toI32();
  }
}

export class RulingAppealConfirmed extends ethereum.Event {
  get params(): RulingAppealConfirmed__Params {
    return new RulingAppealConfirmed__Params(this);
  }
}

export class RulingAppealConfirmed__Params {
  _event: RulingAppealConfirmed;

  constructor(event: RulingAppealConfirmed) {
    this._event = event;
  }

  get disputeId(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get roundId(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }

  get draftTermId(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }

  get jurorsNumber(): BigInt {
    return this._event.parameters[3].value.toBigInt();
  }
}

export class RulingComputed extends ethereum.Event {
  get params(): RulingComputed__Params {
    return new RulingComputed__Params(this);
  }
}

export class RulingComputed__Params {
  _event: RulingComputed;

  constructor(event: RulingComputed) {
    this._event = event;
  }

  get disputeId(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get ruling(): i32 {
    return this._event.parameters[1].value.toI32();
  }
}

export class PenaltiesSettled extends ethereum.Event {
  get params(): PenaltiesSettled__Params {
    return new PenaltiesSettled__Params(this);
  }
}

export class PenaltiesSettled__Params {
  _event: PenaltiesSettled;

  constructor(event: PenaltiesSettled) {
    this._event = event;
  }

  get disputeId(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get roundId(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }

  get collectedTokens(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }
}

export class RewardSettled extends ethereum.Event {
  get params(): RewardSettled__Params {
    return new RewardSettled__Params(this);
  }
}

export class RewardSettled__Params {
  _event: RewardSettled;

  constructor(event: RewardSettled) {
    this._event = event;
  }

  get disputeId(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get roundId(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }

  get juror(): Address {
    return this._event.parameters[2].value.toAddress();
  }

  get tokens(): BigInt {
    return this._event.parameters[3].value.toBigInt();
  }

  get fees(): BigInt {
    return this._event.parameters[4].value.toBigInt();
  }
}

export class AppealDepositSettled extends ethereum.Event {
  get params(): AppealDepositSettled__Params {
    return new AppealDepositSettled__Params(this);
  }
}

export class AppealDepositSettled__Params {
  _event: AppealDepositSettled;

  constructor(event: AppealDepositSettled) {
    this._event = event;
  }

  get disputeId(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get roundId(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }
}

export class MaxJurorsPerDraftBatchChanged extends ethereum.Event {
  get params(): MaxJurorsPerDraftBatchChanged__Params {
    return new MaxJurorsPerDraftBatchChanged__Params(this);
  }
}

export class MaxJurorsPerDraftBatchChanged__Params {
  _event: MaxJurorsPerDraftBatchChanged;

  constructor(event: MaxJurorsPerDraftBatchChanged) {
    this._event = event;
  }

  get previousMaxJurorsPerDraftBatch(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get currentMaxJurorsPerDraftBatch(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }
}

export class ModuleSet extends ethereum.Event {
  get params(): ModuleSet__Params {
    return new ModuleSet__Params(this);
  }
}

export class ModuleSet__Params {
  _event: ModuleSet;

  constructor(event: ModuleSet) {
    this._event = event;
  }

  get id(): Bytes {
    return this._event.parameters[0].value.toBytes();
  }

  get addr(): Address {
    return this._event.parameters[1].value.toAddress();
  }
}

export class FundsGovernorChanged extends ethereum.Event {
  get params(): FundsGovernorChanged__Params {
    return new FundsGovernorChanged__Params(this);
  }
}

export class FundsGovernorChanged__Params {
  _event: FundsGovernorChanged;

  constructor(event: FundsGovernorChanged) {
    this._event = event;
  }

  get previousGovernor(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get currentGovernor(): Address {
    return this._event.parameters[1].value.toAddress();
  }
}

export class ConfigGovernorChanged extends ethereum.Event {
  get params(): ConfigGovernorChanged__Params {
    return new ConfigGovernorChanged__Params(this);
  }
}

export class ConfigGovernorChanged__Params {
  _event: ConfigGovernorChanged;

  constructor(event: ConfigGovernorChanged) {
    this._event = event;
  }

  get previousGovernor(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get currentGovernor(): Address {
    return this._event.parameters[1].value.toAddress();
  }
}

export class FeesUpdaterChanged extends ethereum.Event {
  get params(): FeesUpdaterChanged__Params {
    return new FeesUpdaterChanged__Params(this);
  }
}

export class FeesUpdaterChanged__Params {
  _event: FeesUpdaterChanged;

  constructor(event: FeesUpdaterChanged) {
    this._event = event;
  }

  get previousFeesUpdater(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get currentFeesUpdater(): Address {
    return this._event.parameters[1].value.toAddress();
  }
}

export class ModulesGovernorChanged extends ethereum.Event {
  get params(): ModulesGovernorChanged__Params {
    return new ModulesGovernorChanged__Params(this);
  }
}

export class ModulesGovernorChanged__Params {
  _event: ModulesGovernorChanged;

  constructor(event: ModulesGovernorChanged) {
    this._event = event;
  }

  get previousGovernor(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get currentGovernor(): Address {
    return this._event.parameters[1].value.toAddress();
  }
}

export class AragonCourt__disputesResult {
  value0: Address;
  value1: i32;

  constructor(value0: Address, value1: i32) {
    this.value0 = value0;
    this.value1 = value1;
  }

  toMap(): TypedMap<string, ethereum.Value> {
    let map = new TypedMap<string, ethereum.Value>();
    map.set("value0", ethereum.Value.fromAddress(this.value0));
    map.set(
      "value1",
      ethereum.Value.fromUnsignedBigInt(BigInt.fromI32(this.value1))
    );
    return map;
  }

  getSubject(): Address {
    return this.value0;
  }

  getState(): i32 {
    return this.value1;
  }
}

export class AragonCourt__getDisputeFeesResult {
  value0: Address;
  value1: Address;
  value2: BigInt;

  constructor(value0: Address, value1: Address, value2: BigInt) {
    this.value0 = value0;
    this.value1 = value1;
    this.value2 = value2;
  }

  toMap(): TypedMap<string, ethereum.Value> {
    let map = new TypedMap<string, ethereum.Value>();
    map.set("value0", ethereum.Value.fromAddress(this.value0));
    map.set("value1", ethereum.Value.fromAddress(this.value1));
    map.set("value2", ethereum.Value.fromUnsignedBigInt(this.value2));
    return map;
  }

  getValue0(): Address {
    return this.value0;
  }

  getValue1(): Address {
    return this.value1;
  }

  getValue2(): BigInt {
    return this.value2;
  }
}

export class AragonCourt__computeRulingResult {
  value0: Address;
  value1: i32;

  constructor(value0: Address, value1: i32) {
    this.value0 = value0;
    this.value1 = value1;
  }

  toMap(): TypedMap<string, ethereum.Value> {
    let map = new TypedMap<string, ethereum.Value>();
    map.set("value0", ethereum.Value.fromAddress(this.value0));
    map.set(
      "value1",
      ethereum.Value.fromUnsignedBigInt(BigInt.fromI32(this.value1))
    );
    return map;
  }

  getSubject(): Address {
    return this.value0;
  }

  getFinalRuling(): i32 {
    return this.value1;
  }
}

export class AragonCourt__ruleResult {
  value0: Address;
  value1: BigInt;

  constructor(value0: Address, value1: BigInt) {
    this.value0 = value0;
    this.value1 = value1;
  }

  toMap(): TypedMap<string, ethereum.Value> {
    let map = new TypedMap<string, ethereum.Value>();
    map.set("value0", ethereum.Value.fromAddress(this.value0));
    map.set("value1", ethereum.Value.fromUnsignedBigInt(this.value1));
    return map;
  }

  getSubject(): Address {
    return this.value0;
  }

  getRuling(): BigInt {
    return this.value1;
  }
}

export class AragonCourt__getConfigResult {
  value0: Address;
  value1: Array<BigInt>;
  value2: i32;
  value3: Array<BigInt>;
  value4: Array<i32>;
  value5: Array<BigInt>;
  value6: Array<BigInt>;

  constructor(
    value0: Address,
    value1: Array<BigInt>,
    value2: i32,
    value3: Array<BigInt>,
    value4: Array<i32>,
    value5: Array<BigInt>,
    value6: Array<BigInt>
  ) {
    this.value0 = value0;
    this.value1 = value1;
    this.value2 = value2;
    this.value3 = value3;
    this.value4 = value4;
    this.value5 = value5;
    this.value6 = value6;
  }

  toMap(): TypedMap<string, ethereum.Value> {
    let map = new TypedMap<string, ethereum.Value>();
    map.set("value0", ethereum.Value.fromAddress(this.value0));
    map.set("value1", ethereum.Value.fromUnsignedBigIntArray(this.value1));
    map.set(
      "value2",
      ethereum.Value.fromUnsignedBigInt(BigInt.fromI32(this.value2))
    );
    map.set("value3", ethereum.Value.fromUnsignedBigIntArray(this.value3));
    map.set("value4", ethereum.Value.fromI32Array(this.value4));
    map.set("value5", ethereum.Value.fromUnsignedBigIntArray(this.value5));
    map.set("value6", ethereum.Value.fromUnsignedBigIntArray(this.value6));
    return map;
  }

  get_feeToken(): Address {
    return this.value0;
  }

  getFees(): Array<BigInt> {
    return this.value1;
  }

  getMaxRulingOptions(): i32 {
    return this.value2;
  }

  getRoundParams(): Array<BigInt> {
    return this.value3;
  }

  getPcts(): Array<i32> {
    return this.value4;
  }

  getAppealCollateralParams(): Array<BigInt> {
    return this.value5;
  }

  getJurorsParams(): Array<BigInt> {
    return this.value6;
  }
}

export class AragonCourt__getTermResult {
  value0: BigInt;
  value1: BigInt;
  value2: Bytes;
  value3: BigInt;

  constructor(value0: BigInt, value1: BigInt, value2: Bytes, value3: BigInt) {
    this.value0 = value0;
    this.value1 = value1;
    this.value2 = value2;
    this.value3 = value3;
  }

  toMap(): TypedMap<string, ethereum.Value> {
    let map = new TypedMap<string, ethereum.Value>();
    map.set("value0", ethereum.Value.fromUnsignedBigInt(this.value0));
    map.set("value1", ethereum.Value.fromUnsignedBigInt(this.value1));
    map.set("value2", ethereum.Value.fromFixedBytes(this.value2));
    map.set("value3", ethereum.Value.fromUnsignedBigInt(this.value3));
    return map;
  }

  getStartTime(): BigInt {
    return this.value0;
  }

  getRandomnessBN(): BigInt {
    return this.value1;
  }

  getRandomness(): Bytes {
    return this.value2;
  }

  getCelesteTokenTotalSupply(): BigInt {
    return this.value3;
  }
}

export class AragonCourt extends ethereum.SmartContract {
  static bind(address: Address): AragonCourt {
    return new AragonCourt("AragonCourt", address);
  }

  getCurrentTermId(): BigInt {
    let result = super.call(
      "getCurrentTermId",
      "getCurrentTermId():(uint64)",
      []
    );

    return result[0].toBigInt();
  }

  try_getCurrentTermId(): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "getCurrentTermId",
      "getCurrentTermId():(uint64)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  getVoting(): Address {
    let result = super.call("getVoting", "getVoting():(address)", []);

    return result[0].toAddress();
  }

  try_getVoting(): ethereum.CallResult<Address> {
    let result = super.tryCall("getVoting", "getVoting():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  getTermDuration(): BigInt {
    let result = super.call(
      "getTermDuration",
      "getTermDuration():(uint64)",
      []
    );

    return result[0].toBigInt();
  }

  try_getTermDuration(): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "getTermDuration",
      "getTermDuration():(uint64)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  getTreasury(): Address {
    let result = super.call("getTreasury", "getTreasury():(address)", []);

    return result[0].toAddress();
  }

  try_getTreasury(): ethereum.CallResult<Address> {
    let result = super.tryCall("getTreasury", "getTreasury():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  getSubscriptions(): Address {
    let result = super.call(
      "getSubscriptions",
      "getSubscriptions():(address)",
      []
    );

    return result[0].toAddress();
  }

  try_getSubscriptions(): ethereum.CallResult<Address> {
    let result = super.tryCall(
      "getSubscriptions",
      "getSubscriptions():(address)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  getFundsGovernor(): Address {
    let result = super.call(
      "getFundsGovernor",
      "getFundsGovernor():(address)",
      []
    );

    return result[0].toAddress();
  }

  try_getFundsGovernor(): ethereum.CallResult<Address> {
    let result = super.tryCall(
      "getFundsGovernor",
      "getFundsGovernor():(address)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  getModulesGovernor(): Address {
    let result = super.call(
      "getModulesGovernor",
      "getModulesGovernor():(address)",
      []
    );

    return result[0].toAddress();
  }

  try_getModulesGovernor(): ethereum.CallResult<Address> {
    let result = super.tryCall(
      "getModulesGovernor",
      "getModulesGovernor():(address)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  disputes(param0: BigInt): AragonCourt__disputesResult {
    let result = super.call("disputes", "disputes(uint256):(address,uint8)", [
      ethereum.Value.fromUnsignedBigInt(param0)
    ]);

    return new AragonCourt__disputesResult(
      result[0].toAddress(),
      result[1].toI32()
    );
  }

  try_disputes(
    param0: BigInt
  ): ethereum.CallResult<AragonCourt__disputesResult> {
    let result = super.tryCall(
      "disputes",
      "disputes(uint256):(address,uint8)",
      [ethereum.Value.fromUnsignedBigInt(param0)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      new AragonCourt__disputesResult(value[0].toAddress(), value[1].toI32())
    );
  }

  feeToken(): Address {
    let result = super.call("feeToken", "feeToken():(address)", []);

    return result[0].toAddress();
  }

  try_feeToken(): ethereum.CallResult<Address> {
    let result = super.tryCall("feeToken", "feeToken():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  feeAmount(): BigInt {
    let result = super.call("feeAmount", "feeAmount():(uint256)", []);

    return result[0].toBigInt();
  }

  try_feeAmount(): ethereum.CallResult<BigInt> {
    let result = super.tryCall("feeAmount", "feeAmount():(uint256)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  getBrightIdRegister(): Address {
    let result = super.call(
      "getBrightIdRegister",
      "getBrightIdRegister():(address)",
      []
    );

    return result[0].toAddress();
  }

  try_getBrightIdRegister(): ethereum.CallResult<Address> {
    let result = super.tryCall(
      "getBrightIdRegister",
      "getBrightIdRegister():(address)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  getDisputeFees(): AragonCourt__getDisputeFeesResult {
    let result = super.call(
      "getDisputeFees",
      "getDisputeFees():(address,address,uint256)",
      []
    );

    return new AragonCourt__getDisputeFeesResult(
      result[0].toAddress(),
      result[1].toAddress(),
      result[2].toBigInt()
    );
  }

  try_getDisputeFees(): ethereum.CallResult<AragonCourt__getDisputeFeesResult> {
    let result = super.tryCall(
      "getDisputeFees",
      "getDisputeFees():(address,address,uint256)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      new AragonCourt__getDisputeFeesResult(
        value[0].toAddress(),
        value[1].toAddress(),
        value[2].toBigInt()
      )
    );
  }

  getModule(_id: Bytes): Address {
    let result = super.call("getModule", "getModule(bytes32):(address)", [
      ethereum.Value.fromFixedBytes(_id)
    ]);

    return result[0].toAddress();
  }

  try_getModule(_id: Bytes): ethereum.CallResult<Address> {
    let result = super.tryCall("getModule", "getModule(bytes32):(address)", [
      ethereum.Value.fromFixedBytes(_id)
    ]);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  owner(): Address {
    let result = super.call("owner", "owner():(address)", []);

    return result[0].toAddress();
  }

  try_owner(): ethereum.CallResult<Address> {
    let result = super.tryCall("owner", "owner():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  getJurorsRegistry(): Address {
    let result = super.call(
      "getJurorsRegistry",
      "getJurorsRegistry():(address)",
      []
    );

    return result[0].toAddress();
  }

  try_getJurorsRegistry(): ethereum.CallResult<Address> {
    let result = super.tryCall(
      "getJurorsRegistry",
      "getJurorsRegistry():(address)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  getConfigGovernor(): Address {
    let result = super.call(
      "getConfigGovernor",
      "getConfigGovernor():(address)",
      []
    );

    return result[0].toAddress();
  }

  try_getConfigGovernor(): ethereum.CallResult<Address> {
    let result = super.tryCall(
      "getConfigGovernor",
      "getConfigGovernor():(address)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  heartbeat(_maxRequestedTransitions: BigInt): BigInt {
    let result = super.call("heartbeat", "heartbeat(uint64):(uint64)", [
      ethereum.Value.fromUnsignedBigInt(_maxRequestedTransitions)
    ]);

    return result[0].toBigInt();
  }

  try_heartbeat(_maxRequestedTransitions: BigInt): ethereum.CallResult<BigInt> {
    let result = super.tryCall("heartbeat", "heartbeat(uint64):(uint64)", [
      ethereum.Value.fromUnsignedBigInt(_maxRequestedTransitions)
    ]);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  getFeesUpdater(): Address {
    let result = super.call("getFeesUpdater", "getFeesUpdater():(address)", []);

    return result[0].toAddress();
  }

  try_getFeesUpdater(): ethereum.CallResult<Address> {
    let result = super.tryCall(
      "getFeesUpdater",
      "getFeesUpdater():(address)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  computeRuling(_disputeId: BigInt): AragonCourt__computeRulingResult {
    let result = super.call(
      "computeRuling",
      "computeRuling(uint256):(address,uint8)",
      [ethereum.Value.fromUnsignedBigInt(_disputeId)]
    );

    return new AragonCourt__computeRulingResult(
      result[0].toAddress(),
      result[1].toI32()
    );
  }

  try_computeRuling(
    _disputeId: BigInt
  ): ethereum.CallResult<AragonCourt__computeRulingResult> {
    let result = super.tryCall(
      "computeRuling",
      "computeRuling(uint256):(address,uint8)",
      [ethereum.Value.fromUnsignedBigInt(_disputeId)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      new AragonCourt__computeRulingResult(
        value[0].toAddress(),
        value[1].toI32()
      )
    );
  }

  createDispute(_possibleRulings: BigInt, _metadata: Bytes): BigInt {
    let result = super.call(
      "createDispute",
      "createDispute(uint256,bytes):(uint256)",
      [
        ethereum.Value.fromUnsignedBigInt(_possibleRulings),
        ethereum.Value.fromBytes(_metadata)
      ]
    );

    return result[0].toBigInt();
  }

  try_createDispute(
    _possibleRulings: BigInt,
    _metadata: Bytes
  ): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "createDispute",
      "createDispute(uint256,bytes):(uint256)",
      [
        ethereum.Value.fromUnsignedBigInt(_possibleRulings),
        ethereum.Value.fromBytes(_metadata)
      ]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  rule(_disputeId: BigInt): AragonCourt__ruleResult {
    let result = super.call("rule", "rule(uint256):(address,uint256)", [
      ethereum.Value.fromUnsignedBigInt(_disputeId)
    ]);

    return new AragonCourt__ruleResult(
      result[0].toAddress(),
      result[1].toBigInt()
    );
  }

  try_rule(_disputeId: BigInt): ethereum.CallResult<AragonCourt__ruleResult> {
    let result = super.tryCall("rule", "rule(uint256):(address,uint256)", [
      ethereum.Value.fromUnsignedBigInt(_disputeId)
    ]);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      new AragonCourt__ruleResult(value[0].toAddress(), value[1].toBigInt())
    );
  }

  getDisputeManager(): Address {
    let result = super.call(
      "getDisputeManager",
      "getDisputeManager():(address)",
      []
    );

    return result[0].toAddress();
  }

  try_getDisputeManager(): ethereum.CallResult<Address> {
    let result = super.tryCall(
      "getDisputeManager",
      "getDisputeManager():(address)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  getConfig(_termId: BigInt): AragonCourt__getConfigResult {
    let result = super.call(
      "getConfig",
      "getConfig(uint64):(address,uint256[3],uint8,uint64[9],uint16[2],uint256[2],uint256[4])",
      [ethereum.Value.fromUnsignedBigInt(_termId)]
    );

    return new AragonCourt__getConfigResult(
      result[0].toAddress(),
      result[1].toBigIntArray(),
      result[2].toI32(),
      result[3].toBigIntArray(),
      result[4].toI32Array(),
      result[5].toBigIntArray(),
      result[6].toBigIntArray()
    );
  }

  try_getConfig(
    _termId: BigInt
  ): ethereum.CallResult<AragonCourt__getConfigResult> {
    let result = super.tryCall(
      "getConfig",
      "getConfig(uint64):(address,uint256[3],uint8,uint64[9],uint16[2],uint256[2],uint256[4])",
      [ethereum.Value.fromUnsignedBigInt(_termId)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      new AragonCourt__getConfigResult(
        value[0].toAddress(),
        value[1].toBigIntArray(),
        value[2].toI32(),
        value[3].toBigIntArray(),
        value[4].toI32Array(),
        value[5].toBigIntArray(),
        value[6].toBigIntArray()
      )
    );
  }

  currentId(): BigInt {
    let result = super.call("currentId", "currentId():(uint256)", []);

    return result[0].toBigInt();
  }

  try_currentId(): ethereum.CallResult<BigInt> {
    let result = super.tryCall("currentId", "currentId():(uint256)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  getTerm(_termId: BigInt): AragonCourt__getTermResult {
    let result = super.call(
      "getTerm",
      "getTerm(uint64):(uint64,uint64,bytes32,uint256)",
      [ethereum.Value.fromUnsignedBigInt(_termId)]
    );

    return new AragonCourt__getTermResult(
      result[0].toBigInt(),
      result[1].toBigInt(),
      result[2].toBytes(),
      result[3].toBigInt()
    );
  }

  try_getTerm(
    _termId: BigInt
  ): ethereum.CallResult<AragonCourt__getTermResult> {
    let result = super.tryCall(
      "getTerm",
      "getTerm(uint64):(uint64,uint64,bytes32,uint256)",
      [ethereum.Value.fromUnsignedBigInt(_termId)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      new AragonCourt__getTermResult(
        value[0].toBigInt(),
        value[1].toBigInt(),
        value[2].toBytes(),
        value[3].toBigInt()
      )
    );
  }
}

export class SetOwnerCall extends ethereum.Call {
  get inputs(): SetOwnerCall__Inputs {
    return new SetOwnerCall__Inputs(this);
  }

  get outputs(): SetOwnerCall__Outputs {
    return new SetOwnerCall__Outputs(this);
  }
}

export class SetOwnerCall__Inputs {
  _call: SetOwnerCall;

  constructor(call: SetOwnerCall) {
    this._call = call;
  }

  get _owner(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class SetOwnerCall__Outputs {
  _call: SetOwnerCall;

  constructor(call: SetOwnerCall) {
    this._call = call;
  }
}

export class DecideDisputeCall extends ethereum.Call {
  get inputs(): DecideDisputeCall__Inputs {
    return new DecideDisputeCall__Inputs(this);
  }

  get outputs(): DecideDisputeCall__Outputs {
    return new DecideDisputeCall__Outputs(this);
  }
}

export class DecideDisputeCall__Inputs {
  _call: DecideDisputeCall;

  constructor(call: DecideDisputeCall) {
    this._call = call;
  }

  get _disputeId(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get _state(): i32 {
    return this._call.inputValues[1].value.toI32();
  }
}

export class DecideDisputeCall__Outputs {
  _call: DecideDisputeCall;

  constructor(call: DecideDisputeCall) {
    this._call = call;
  }
}

export class ChangeFeesUpdaterCall extends ethereum.Call {
  get inputs(): ChangeFeesUpdaterCall__Inputs {
    return new ChangeFeesUpdaterCall__Inputs(this);
  }

  get outputs(): ChangeFeesUpdaterCall__Outputs {
    return new ChangeFeesUpdaterCall__Outputs(this);
  }
}

export class ChangeFeesUpdaterCall__Inputs {
  _call: ChangeFeesUpdaterCall;

  constructor(call: ChangeFeesUpdaterCall) {
    this._call = call;
  }

  get _newFeesUpdater(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class ChangeFeesUpdaterCall__Outputs {
  _call: ChangeFeesUpdaterCall;

  constructor(call: ChangeFeesUpdaterCall) {
    this._call = call;
  }
}

export class SetModuleCall extends ethereum.Call {
  get inputs(): SetModuleCall__Inputs {
    return new SetModuleCall__Inputs(this);
  }

  get outputs(): SetModuleCall__Outputs {
    return new SetModuleCall__Outputs(this);
  }
}

export class SetModuleCall__Inputs {
  _call: SetModuleCall;

  constructor(call: SetModuleCall) {
    this._call = call;
  }

  get _id(): Bytes {
    return this._call.inputValues[0].value.toBytes();
  }

  get _addr(): Address {
    return this._call.inputValues[1].value.toAddress();
  }
}

export class SetModuleCall__Outputs {
  _call: SetModuleCall;

  constructor(call: SetModuleCall) {
    this._call = call;
  }
}

export class SubmitEvidenceCall extends ethereum.Call {
  get inputs(): SubmitEvidenceCall__Inputs {
    return new SubmitEvidenceCall__Inputs(this);
  }

  get outputs(): SubmitEvidenceCall__Outputs {
    return new SubmitEvidenceCall__Outputs(this);
  }
}

export class SubmitEvidenceCall__Inputs {
  _call: SubmitEvidenceCall;

  constructor(call: SubmitEvidenceCall) {
    this._call = call;
  }

  get _subject(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get _disputeId(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }

  get _submitter(): Address {
    return this._call.inputValues[2].value.toAddress();
  }

  get _evidence(): Bytes {
    return this._call.inputValues[3].value.toBytes();
  }
}

export class SubmitEvidenceCall__Outputs {
  _call: SubmitEvidenceCall;

  constructor(call: SubmitEvidenceCall) {
    this._call = call;
  }
}

export class DraftCall extends ethereum.Call {
  get inputs(): DraftCall__Inputs {
    return new DraftCall__Inputs(this);
  }

  get outputs(): DraftCall__Outputs {
    return new DraftCall__Outputs(this);
  }
}

export class DraftCall__Inputs {
  _call: DraftCall;

  constructor(call: DraftCall) {
    this._call = call;
  }

  get _disputeId(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class DraftCall__Outputs {
  _call: DraftCall;

  constructor(call: DraftCall) {
    this._call = call;
  }
}

export class EjectModulesGovernorCall extends ethereum.Call {
  get inputs(): EjectModulesGovernorCall__Inputs {
    return new EjectModulesGovernorCall__Inputs(this);
  }

  get outputs(): EjectModulesGovernorCall__Outputs {
    return new EjectModulesGovernorCall__Outputs(this);
  }
}

export class EjectModulesGovernorCall__Inputs {
  _call: EjectModulesGovernorCall;

  constructor(call: EjectModulesGovernorCall) {
    this._call = call;
  }
}

export class EjectModulesGovernorCall__Outputs {
  _call: EjectModulesGovernorCall;

  constructor(call: EjectModulesGovernorCall) {
    this._call = call;
  }
}

export class ChangeFundsGovernorCall extends ethereum.Call {
  get inputs(): ChangeFundsGovernorCall__Inputs {
    return new ChangeFundsGovernorCall__Inputs(this);
  }

  get outputs(): ChangeFundsGovernorCall__Outputs {
    return new ChangeFundsGovernorCall__Outputs(this);
  }
}

export class ChangeFundsGovernorCall__Inputs {
  _call: ChangeFundsGovernorCall;

  constructor(call: ChangeFundsGovernorCall) {
    this._call = call;
  }

  get _newFundsGovernor(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class ChangeFundsGovernorCall__Outputs {
  _call: ChangeFundsGovernorCall;

  constructor(call: ChangeFundsGovernorCall) {
    this._call = call;
  }
}

export class HeartbeatCall extends ethereum.Call {
  get inputs(): HeartbeatCall__Inputs {
    return new HeartbeatCall__Inputs(this);
  }

  get outputs(): HeartbeatCall__Outputs {
    return new HeartbeatCall__Outputs(this);
  }
}

export class HeartbeatCall__Inputs {
  _call: HeartbeatCall;

  constructor(call: HeartbeatCall) {
    this._call = call;
  }

  get _maxRequestedTransitions(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class HeartbeatCall__Outputs {
  _call: HeartbeatCall;

  constructor(call: HeartbeatCall) {
    this._call = call;
  }

  get value0(): BigInt {
    return this._call.outputValues[0].value.toBigInt();
  }
}

export class SetTermDurationCall extends ethereum.Call {
  get inputs(): SetTermDurationCall__Inputs {
    return new SetTermDurationCall__Inputs(this);
  }

  get outputs(): SetTermDurationCall__Outputs {
    return new SetTermDurationCall__Outputs(this);
  }
}

export class SetTermDurationCall__Inputs {
  _call: SetTermDurationCall;

  constructor(call: SetTermDurationCall) {
    this._call = call;
  }

  get _termDuration(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class SetTermDurationCall__Outputs {
  _call: SetTermDurationCall;

  constructor(call: SetTermDurationCall) {
    this._call = call;
  }
}

export class ComputeRulingCall extends ethereum.Call {
  get inputs(): ComputeRulingCall__Inputs {
    return new ComputeRulingCall__Inputs(this);
  }

  get outputs(): ComputeRulingCall__Outputs {
    return new ComputeRulingCall__Outputs(this);
  }
}

export class ComputeRulingCall__Inputs {
  _call: ComputeRulingCall;

  constructor(call: ComputeRulingCall) {
    this._call = call;
  }

  get _disputeId(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class ComputeRulingCall__Outputs {
  _call: ComputeRulingCall;

  constructor(call: ComputeRulingCall) {
    this._call = call;
  }

  get subject(): Address {
    return this._call.outputValues[0].value.toAddress();
  }

  get finalRuling(): i32 {
    return this._call.outputValues[1].value.toI32();
  }
}

export class CreateDisputeCall extends ethereum.Call {
  get inputs(): CreateDisputeCall__Inputs {
    return new CreateDisputeCall__Inputs(this);
  }

  get outputs(): CreateDisputeCall__Outputs {
    return new CreateDisputeCall__Outputs(this);
  }
}

export class CreateDisputeCall__Inputs {
  _call: CreateDisputeCall;

  constructor(call: CreateDisputeCall) {
    this._call = call;
  }

  get _possibleRulings(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get _metadata(): Bytes {
    return this._call.inputValues[1].value.toBytes();
  }
}

export class CreateDisputeCall__Outputs {
  _call: CreateDisputeCall;

  constructor(call: CreateDisputeCall) {
    this._call = call;
  }

  get value0(): BigInt {
    return this._call.outputValues[0].value.toBigInt();
  }
}

export class CloseEvidencePeriodCall extends ethereum.Call {
  get inputs(): CloseEvidencePeriodCall__Inputs {
    return new CloseEvidencePeriodCall__Inputs(this);
  }

  get outputs(): CloseEvidencePeriodCall__Outputs {
    return new CloseEvidencePeriodCall__Outputs(this);
  }
}

export class CloseEvidencePeriodCall__Inputs {
  _call: CloseEvidencePeriodCall;

  constructor(call: CloseEvidencePeriodCall) {
    this._call = call;
  }

  get _subject(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get _disputeId(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }
}

export class CloseEvidencePeriodCall__Outputs {
  _call: CloseEvidencePeriodCall;

  constructor(call: CloseEvidencePeriodCall) {
    this._call = call;
  }
}

export class EjectFundsGovernorCall extends ethereum.Call {
  get inputs(): EjectFundsGovernorCall__Inputs {
    return new EjectFundsGovernorCall__Inputs(this);
  }

  get outputs(): EjectFundsGovernorCall__Outputs {
    return new EjectFundsGovernorCall__Outputs(this);
  }
}

export class EjectFundsGovernorCall__Inputs {
  _call: EjectFundsGovernorCall;

  constructor(call: EjectFundsGovernorCall) {
    this._call = call;
  }
}

export class EjectFundsGovernorCall__Outputs {
  _call: EjectFundsGovernorCall;

  constructor(call: EjectFundsGovernorCall) {
    this._call = call;
  }
}

export class ChangeModulesGovernorCall extends ethereum.Call {
  get inputs(): ChangeModulesGovernorCall__Inputs {
    return new ChangeModulesGovernorCall__Inputs(this);
  }

  get outputs(): ChangeModulesGovernorCall__Outputs {
    return new ChangeModulesGovernorCall__Outputs(this);
  }
}

export class ChangeModulesGovernorCall__Inputs {
  _call: ChangeModulesGovernorCall;

  constructor(call: ChangeModulesGovernorCall) {
    this._call = call;
  }

  get _newModulesGovernor(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class ChangeModulesGovernorCall__Outputs {
  _call: ChangeModulesGovernorCall;

  constructor(call: ChangeModulesGovernorCall) {
    this._call = call;
  }
}

export class ChangeConfigGovernorCall extends ethereum.Call {
  get inputs(): ChangeConfigGovernorCall__Inputs {
    return new ChangeConfigGovernorCall__Inputs(this);
  }

  get outputs(): ChangeConfigGovernorCall__Outputs {
    return new ChangeConfigGovernorCall__Outputs(this);
  }
}

export class ChangeConfigGovernorCall__Inputs {
  _call: ChangeConfigGovernorCall;

  constructor(call: ChangeConfigGovernorCall) {
    this._call = call;
  }

  get _newConfigGovernor(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class ChangeConfigGovernorCall__Outputs {
  _call: ChangeConfigGovernorCall;

  constructor(call: ChangeConfigGovernorCall) {
    this._call = call;
  }
}

export class RuleCall extends ethereum.Call {
  get inputs(): RuleCall__Inputs {
    return new RuleCall__Inputs(this);
  }

  get outputs(): RuleCall__Outputs {
    return new RuleCall__Outputs(this);
  }
}

export class RuleCall__Inputs {
  _call: RuleCall;

  constructor(call: RuleCall) {
    this._call = call;
  }

  get _disputeId(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class RuleCall__Outputs {
  _call: RuleCall;

  constructor(call: RuleCall) {
    this._call = call;
  }

  get subject(): Address {
    return this._call.outputValues[0].value.toAddress();
  }

  get ruling(): BigInt {
    return this._call.outputValues[1].value.toBigInt();
  }
}

export class DelayStartTimeCall extends ethereum.Call {
  get inputs(): DelayStartTimeCall__Inputs {
    return new DelayStartTimeCall__Inputs(this);
  }

  get outputs(): DelayStartTimeCall__Outputs {
    return new DelayStartTimeCall__Outputs(this);
  }
}

export class DelayStartTimeCall__Inputs {
  _call: DelayStartTimeCall;

  constructor(call: DelayStartTimeCall) {
    this._call = call;
  }

  get _newFirstTermStartTime(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class DelayStartTimeCall__Outputs {
  _call: DelayStartTimeCall;

  constructor(call: DelayStartTimeCall) {
    this._call = call;
  }
}

export class ConstructorCall extends ethereum.Call {
  get inputs(): ConstructorCall__Inputs {
    return new ConstructorCall__Inputs(this);
  }

  get outputs(): ConstructorCall__Outputs {
    return new ConstructorCall__Outputs(this);
  }
}

export class ConstructorCall__Inputs {
  _call: ConstructorCall;

  constructor(call: ConstructorCall) {
    this._call = call;
  }

  get _feeToken(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get _feeAmount(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }
}

export class ConstructorCall__Outputs {
  _call: ConstructorCall;

  constructor(call: ConstructorCall) {
    this._call = call;
  }
}
